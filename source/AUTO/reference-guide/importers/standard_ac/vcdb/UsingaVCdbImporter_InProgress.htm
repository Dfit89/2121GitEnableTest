<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Primary.Under Construction">
    <head><title>[%=Heading.AnyLevel%]</title>
    </head>
    <body>
        <h1>Using a VCdb <MadCap:annotation MadCap:createDate="2018-06-27T11:45:07.5448761-04:00" MadCap:creator="lato" MadCap:initials="LA" MadCap:comment="MEDU- there are a lot of examples and pictures in this topic. I am not sure if you want them all or not, but I did stick them all in as he had them in case you did want them all. Adjust how you see best needed! :) " MadCap:editor="lato" MadCap:editDate="2018-06-28T10:04:07.4936098-04:00">Importer</MadCap:annotation></h1>
        <p>The intention of the  automotive import core solution is to provide an out-of-the-box solution for importers with various automotive standards. Each customer can then apply their own validations, business processes, and data management procedures.</p>
        <p>This section details how to import VCdb files in Web UI. For more on importing VCdb file in STEP workbench, see  the <b>Import Framework</b> topic in the <b>Automotive</b> section of the <b>Solution Enablement</b> documentation<MadCap:xref href="../../../../Reference Guide/Importers/Import Framework.htm" class="Here" MadCap:conditions="Primary.Web"><span style="color: Blue;" class="mcFormatColor"> here</span></MadCap:xref>.</p>
        <h3>Prerequisites</h3>
        <p>The VCdb Importer screen must be configured in Web UI. Additional information can be found in the <b>Using Automotive Importers</b> topic in the <b>Automotive</b> section of the <b>Solution Enablement</b> documentation<MadCap:xref href="../../../../Quick Start Guide/User QSG/Importers/Using Automotive Importers.htm" class="Here" MadCap:conditions="Primary.Web"><span style="color: Blue;" class="mcFormatColor"> here</span></MadCap:xref>.</p>
        <h3>Overview</h3>
        <p>When a file is uploaded in Web UI, a background process is initiated and creates an entity in STEP that represents the file. This entity object is called the 'controller' and contains some basic data about the file and the file's status in the workflow.</p>
        <p>The background process service that runs as part of the import state allow for  business rules to be selected that function in the same way as standard import rules run, meaning that they act on the objects being imported.</p>
        <h2>Importing VCdb file in Web UI</h2>
        <ol>
            <li>Click on the link 'VCdb select file' available in REFERENCE DATA IMPORTS widget, or Drag and drop the file to upload the file.</li>
            <li>A dialog will display at the top of the screen confirming the file has been submitted. </li>
            <li>Background processes will start, and Entity objects called 'Entity controllers' will be created.</li>
        </ol>
        <p>As the Entity moves through the import workflow, a series of background processes handle the various processing and import activities.</p>
        <p>For more information on workflow states, see the <b>Import Workflow Overview</b> topic in the <b>Automotive</b> section of the <b>Solution Enablement</b> documentation<MadCap:xref href="../../../../Quick Start Guide/User QSG/Importers/Import Workflow Overview.htm" class="Here" MadCap:conditions="Primary.Web"><span style="color: Blue;" class="mcFormatColor"> here</span></MadCap:xref>.</p>
        <ul>
            <li class="Bullet1">The original file name is recorded as the STEP Name of the Entity controller.</li>
            <li class="Bullet1">The IDs of the background processes are stored in the Automotive Import Flow State BGP attribute.</li>
            <li class="Bullet1">The Import Flow State Status attribute is also noteworthy as it stores the status of each process, as opposed to the Import Flow Overall Status attribute which displays a global status of the file (rather than a per-process status).</li>
        </ul>
        <p class="note_stibo"> All of the information displayed on the Entity controller  is also displayed within the workflow and controller screens in Web UI. These are discussed in the <b>Quick Start for Users</b> topic in the <b>Automotive</b> section of the <b>Solution Enablement</b> documentation<MadCap:xref href="../../../../Quick Start Guide/User QSG/Quick Start for Users.htm" class="Here" MadCap:conditions="Primary.Web"><span style="color: Blue;" class="mcFormatColor"> here</span></MadCap:xref>.</p>
        <p>Once created, the Entity controller is initiated into the workflow associated with the importer. From there, the workflow takes over processing of the file via a series of states using business rules and background processes to carry out the processing of the file.</p>
        <p class="important_stibo">It is critical to understand that it is only the Entity controller that is in the workflow - the objects being acted on (created / updated / deleted) via information supplied in the import file are not in the workflow. Therefore, running standard business actions acting on current object will impact the Entity controller only, not the objects in the input file.</p>
        <p>Each import has an associated workflow, and all proceed through the same states by default.<MadCap:annotation MadCap:createDate="2018-07-05T16:01:51.6699473-04:00" MadCap:creator="lato" MadCap:initials="LA" MadCap:comment="This sentence originally said: However, it is intended that customers will expand on the existing states and actions to add their own validations, reporting, and additional processing as needed.\r\n\r\n\r\nThat sounded odd to me so I changed it to how it reads now. Please feel free to adjust if you don't like how I changed it. " MadCap:editor="lato" MadCap:editDate="2018-07-05T16:02:49.0716786-04:00"> However, it is intended that customers will expand on the existing states and actions and add their own validations, means of reports, and any other additional process as needed.</MadCap:annotation></p>
        <p class="important_stibo">A new state can be inserted at any point in the workflow, and additional rules can be added to any of the existing states.</p>
        <h3>Sample file <MadCap:annotation MadCap:createDate="2018-06-27T17:10:01.3721531-04:00" MadCap:creator="lato" MadCap:initials="LA" MadCap:comment="I re-did a number of the following screenshots for you. I know you said that you wanted to do them, but some were two pics he put together and others were HUGE, so I just cleaned some up. Feel free to adjust how you prefer. The orignial photos are still in the file attached to the JIRA ticket." MadCap:editor="lato" MadCap:editDate="2018-06-27T17:10:04.4885381-04:00">structure</MadCap:annotation></h3>
        <ol>
            <li>A file must be in zip format. Example: AAIA VCdbYYYY ASCII YYYYMMD.zip</li>
            <li>The zip shall contain the following files as seen in the picture below:</li>
        </ol>
        <p style="font-weight: normal;">Input files are .txt files. The output is based on the input files. In this case, the classification structure will be created under the 'AC_VehicleConfigRoot' group.</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/inputAndOutput.png" />
        </p>
        <p class="Body1">Input:</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Notepad1.png" />
        </p>
        <p>Output: Based on the files 'BodyType.txt' and 'BodyStyleConfiguration.txt,' the classification shown in the screenshot below will be created.</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/5 door.png" />
        </p>
        <p>Input files:</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Input1.png" />
        </p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Input2.png" />
        </p>
        <p>Output: Based on the files 'BaseVehicle.txt,' 'Model.txt,' 'Make.txt,' and 'VehicleType.txt,' the following classification structure will be created under 'AC_VehicleRoot' group root.</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Vehicles1.png" />
        </p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Suzuki.png" />
        </p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Aerio.png" />
        </p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/Suzuki Aerio.png" />
        </p>
        <p>
            <MadCap:annotation MadCap:createDate="2018-06-27T11:32:47.6674615-04:00" MadCap:creator="lato" MadCap:initials="LA" MadCap:comment="I am not sure how you want to handle these pics MEDU. I put them all into one so it was more consolidated (they are all separate in the documents still), but it is a bit large yet. Adjust how you like. " MadCap:editor="lato" MadCap:editDate="2018-06-27T11:33:30.1563308-04:00">Input file:</MadCap:annotation>
        </p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/VehicleNotebook1.png" />
        </p>
        <p>
            <MadCap:annotation MadCap:createDate="2018-06-27T11:35:36.3830587-04:00" MadCap:creator="lato" MadCap:initials="LA" MadCap:comment="They didn't have this label here, but I think that they meant to put this. Please delete this if  you disagree." MadCap:editor="lato" MadCap:editDate="2018-06-27T11:35:58.2433156-04:00"> Outpu</MadCap:annotation>t:</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/202 Suzuki.png" />
        </p>
        <p>Input:</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/InputSedan1.png" />
        </p>
        <p>Output: Based on the files 'VehicleToBodyStyleConfig.txt,' 'BodyStyleConfig.txt,'and 'BodyType.txt,' the vehicle will be linked to the body type via the 'VehicleToBodyStyleConfig' reference type.</p>
        <p class="Image1">
            <img src="../../../../Resources/Images/Importers/Standard_AC/VCdb/OutputSedan1.png" />
        </p>
        <p class="Body1">&#160;</p>
    </body>
</html>