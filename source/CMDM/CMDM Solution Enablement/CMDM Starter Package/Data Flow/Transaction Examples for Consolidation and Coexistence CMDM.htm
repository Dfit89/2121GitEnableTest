<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>[%=Heading.Level1%]</title>
        <meta name="description" content="Customer MDM Solution: This section provides a process overview of the primary data flow throughout the STEP&#160;system." />
    </head>
    <body>
        <h1>Transaction Examples for Consolidation and Coexistence CMDM</h1>
        <p class="Body1">This section provides a process overview of the primary data flow throughout the STEP&#160;system using a Consolidation and Coexistence solution.</p>
        <p class="Image1">
            <img src="../../../../../Resources/Images/Solution Enablement/CMDM/Data Flow/STEP Flow.png" />
        </p>
        <h3>Transaction 1:&#160;Inbound Integration Endpoint</h3>
        <p class="Body1">An inbound integration endpoint will receive a message and transform it into STEPXML.</p>
        <p class="Body1">Once transformed, the Match &amp; Merge Importer will:</p>
        <ul>
            <li class="Bullet2">Execute standardizations and other associated business rules to cleanse the data. Cleansed data allows for the Match algorithm to more accurately identify duplicate records.</li>
            <li class="Bullet2">Determine the target Golden Record. For more information, see the <b>IIEP&#160;- Configure Match and Merge Importer</b> section of the <b>Data Exchange</b> documentation<MadCap:xref href="../../../../../Data Exchange/IIEP/Creating an IIEP/IIEP - Configure Match and Merge Importer Processing Engine.htm" class="Here"><span style="color: Blue;" class="mcFormatColor" MadCap:conditions="Primary.Web"> here</span></MadCap:xref>.</li>
            <li class="Bullet2">Survivorship rules will write any updates from the incoming data to the golden record. For more information, see the <b>Golden Records Survivorship Rules</b> section of the <b>Matching, Linking, and Merging</b> documentation<MadCap:xref href="../../../../../Matching, Linking, and Merging/Golden Records Survivorship Rules.htm" class="Here"><span style="color: Blue;" class="mcFormatColor" MadCap:conditions="Primary.Web"> here</span></MadCap:xref>.</li>
            <li class="Bullet2">To the extent that a Golden Record was created or an existing Golden Record was updated, events will be written to event queues triggering on those changes. In this case, a Matching event processor as well as an Outbound Integration Endpoint.</li>
        </ul>
        <h3>Transaction 2:&#160;Matching Event Processor</h3>
        <p class="Body1">When new golden records are created or an existing golden record is updated, this will trigger a matching event, with the purpose of comparing golden records to each other.</p>
        <p class="Body1">Prior to matching, the golden record under treatment will have its match codes updated.</p>
        <p class="Body1">Matching golden records may result in a clerical review workflow initiation or a merge, depending on the score.</p>
        <p class="Body1">For more information on Clerical Reviews, see the <b>Clerical Review</b> section of the <b>Matching, Linking, and Merging</b> documentation<MadCap:xref href="../../../../../Matching, Linking, and Merging/Clerical Review.htm" class="Here"><span style="color: Blue;" class="mcFormatColor" MadCap:conditions="Primary.Web"> here</span></MadCap:xref>.</p>
        <h3>Transaction 3:&#160;Outbound Integration Endpoint</h3>
        <p class="Body1">Whenever Golden Records are created or changed, an export event will trigger. This allows the mastered data to be synced back to the various source systems.</p>
        <p class="Body1">For more information about Outbound Integration Endpoints, see the <b>Outbound Integration Endpoint</b> section of the <b>Data Exchange</b> documentation<MadCap:xref href="../../../../../Data Exchange/OIEP/Outbound Integration Endpoints.htm" class="Here"><span style="color: Blue;" class="mcFormatColor" MadCap:conditions="Primary.Web"> here</span></MadCap:xref>.</p>
        <p class="note1" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Clerical Review is not a blocking state.</p>
        <h3>Use Case 1 : New Golden Record</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Check if Source System and Source Record ID is associated to existing, active Golden Record (it is not)</li>
            <li class="Bullet2">M&amp;M: Generate Match codes for incoming data and look for matching record using Match Code and Matching Algorithm (no match is found)</li>
            <li class="Bullet2">M&amp;M: Create new Golden Record</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to new Golden Record</li>
        </ul>
        <ol MadCap:continue="true">
            <li class="Numbered1" value="2"><b>Transaction 2 : Handle duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">No duplicate golden records found</li>
            <li class="Bullet3">No potential duplicate golden records found</li>
        </ul>
        <p>3.	<b>Transaction 3 : Export</b></p>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 2 : Update Existing Golden Record with Known Source Record ID</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Check if Source System and Source Record ID is associated to existing, active Golden Record (it is)</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to existing Golden Record</li>
        </ul>
        <ol>
            <li class="Numbered1" value="2"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to existing Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review</li>
        </ul>
        <ol>
            <li class="Numbered1" value="3"><b>Transaction 3: Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 2.1 : Update Existing Golden Record with Known Golden Record ID</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Find existing Golden Record based on STEP ID (golden record id)</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to existing Golden Record</li>
        </ul>
        <ol>
            <li class="Numbered1" value="2"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to surviving Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review</li>
        </ul>
        <ol MadCap:continue="true">
            <li class="Numbered1" value="3"><b>Transaction 3 : Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 3 : Add new source record to existing golden record by matching</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Check if Source System and Source Record ID is associated to existing, active Golden Record (it is not)</li>
            <li class="Bullet2">	M&amp;M: Generate Match codes for incoming data and look for matching record using Match Code and Matching Algorithm (match is found)</li>
            <li class="Bullet2">M&amp;M: Update Existing Golden Record with additional source record ID</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to existing Golden Record</li>
        </ul>
        <ol>
            <li class="Numbered1" value="2"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
        </ul>
        <ul>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to surviving Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review</li>
        </ul>
        <ol>
            <li value="3" class="Numbered1"><b>Transaction 3 : Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 3.1 : Add New Source Record to Existing Golden Record by Golden Record ID</h3>
        <p class="Body1">This use case is relevant when the getSimilarObjects web service has been used to identify that a golden record for a specific customer already exists and a new source record needs to be associated with it.</p>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Find existing Golden Record based on STEP ID (golden record id)</li>
            <li class="Bullet2">M&amp;M: Update existing Golden Record with new source record ID</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to new Golden Record</li>
        </ul>
        <ol>
            <li value="2" class="Numbered1"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to surviving Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review</li>
        </ul>
        <ol>
            <li value="3" class="Numbered1"><b>Transaction 3 : Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 4 : Add New Source Record to Existing Golden Record by Matching, Clerical Review</h3>
        <ol>
            <li class="Numbered1">Transaction 1 : Import</li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Check if Source System and Source Record ID is associated to existing, active Golden Record (it is not)</li>
            <li class="Bullet2">M&amp;M: Generate Match codes for incoming data and look for matching record using Match Code and Matching Algorithm</li>
            <li class="Bullet2">M&amp;M: Match Rules will not find certain matches</li>
            <li class="Bullet2">M&amp;M: Create new Golden Record</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to new Golden Record</li>
        </ul>
        <ol>
            <li value="2" class="Numbered1"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">Identify that newly created golden record is within clerical review threshold and put oldest record in clerical review workflow</li>
        </ul>
        <ol>
            <li class="Numbered1" value="3"><b>Transaction 3: Merge</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">User review duplicate records in clerical review</li>
            <li class="Bullet2">User merge potential duplicates</li>
            <li class="Bullet2">Source record references from non-surviving record gets written to surviving record</li>
            <li class="Bullet2">References TO the non-surviving record gets moved to the surviving record</li>
            <li class="Bullet2">Survivorship rules promote updates from non-surviving- to surviving golden record</li>
            <li class="Bullet2">Non-survivor gets deactivated and Merged-Into reference is established from non-survivor to survivor</li>
        </ul>
        <ol>
            <li value="4" class="Numbered1"><b>Transaction 4 : Export</b>
            </li>
        </ol>
        <p class="Body1">The deactivated record will be exported, as the 'Merged-Into' reference was added and the 'Is Deactivated' was changed to 'true'. The surviving record will be exported, as source records were added to it. Any other object having a reference target moved from the non-surviving record to the surviving record will get exported, to the extent triggering definitions are defined for it.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 5 : Manually Modify Golden Record</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Manual Edit</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">Data Steward: Manually makes edits on an existing Golden Record via the Web UI.</li>
        </ul>
        <ol>
            <li value="2" class="Numbered1"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to existing Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review<ul><li class="Bullet3">MA: If match is confirmed, survivorship Rules Write data to existing Golden Record</li><li class="Bullet3">MA: If match is rejected, create a ‘Confirmed Non-Duplicate’ reference between the two (or more) Golden Records.</li></ul></li>
        </ul>
        <ol>
            <li value="3" class="Numbered1"><b>Transaction 3 : Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <h3>Use Case 6 : Import Cross References by Source Record ID</h3>
        <ol>
            <li class="Numbered1"><b>Transaction 1 : Import</b>
            </li>
        </ol>
        <ul>
            <li class="Bullet2">IIEP: Receive message</li>
            <li class="Bullet2">IIEP: Transform message to STEPXML</li>
            <li class="Bullet2">M&amp;M: Standardize Address</li>
            <li class="Bullet2">M&amp;M: Check if Source System and Source Record ID is associated to existing, active Golden Record (it is for the target entity)</li>
            <li class="Bullet2">M&amp;M: Generate Match codes for incoming data and look for matching record using Match Code and Matching Algorithm</li>
            <li class="Bullet2">M&amp;M: Match Rules will not find certain matches</li>
            <li class="Bullet2">M&amp;M: Create new Golden Record (Source entities)</li>
            <li class="Bullet2">M&amp;M: Survivorship Rules Write data to new Golden Record including creating cross references</li>
        </ul>
        <ol>
            <li value="2" class="Numbered1"><b>Transaction 2 : Handle Duplicate Golden Records</b>
            </li>
        </ol>
        <p class="Body1">The Matching Event Processor polls for events on a schedule.</p>
        <ul>
            <li class="Bullet2">Update match codes for changed Golden Record and look for matching Golden Records using Match Code and Matching Algorithm</li>
            <li class="Bullet3">If an absolute match is found, auto-merge<ul><li class="Bullet3">MA: Survivorship Rules Write data to surviving Golden Record</li></ul></li>
            <li class="Bullet3">If potential duplicate golden records are found, initiate into clerical review</li>
        </ul>
        <ol>
            <li value="3"><b>Transaction 3 : Export</b>
            </li>
        </ol>
        <p class="Body1">Outbound Integration Endpoints poll for events on a schedule. Notice that transaction 2 and 3 are independent.</p>
        <ul>
            <li class="Bullet2">OIEP : No event PreProcessor in use</li>
            <li class="Bullet2">OIEP: Export data to STEPXML</li>
            <li class="Bullet2">OIEP: Transform to target message format</li>
            <li class="Bullet2">OIEP: Deliver message to target</li>
        </ul>
        <p class="Body1">When the Match and Merge Importer reads cross references in the STEPXML, the target Entity may be specified with a source system and a source record ID, instead of a STEP ID. This allows import of references to objects, where the STEP ID is not known.</p>
    </body>
</html>